# Whether to use a database or not. While it's not necessary at all, a database will keep
# track of every block's durability, so durability is not reset after a server restart.
# Warning: the file that contains the database can become huge, so consider cleaning it up
# (this is, removing it) after X server restarts (let's be serious, nobody's gonna care if
# a block he/she damaged three days ago has now its durability fully restored).
UseBlockDatabase: false

# (Note: not used at all if useBlockDatabase is disabled)
# This will perform a database cleanup every time the plugin is reloaded.
# This can help reducing the database size, but may also load the chunks where the blocks were
# located.
CheckBlockDatabaseAtStartup: false

# Maximum and initial durability of every block handled by ExplodeAny.
# [Minimum] is 1.0.
# [Default] is 100.0.
BlockDurability: 100.0

# Metrics allow us to obtain information about the number of servers that use ExplodeAny,
# as well as some of their characteristics, including operating system and Java Version, etc.
# All this data is completely anonymous, and sending metrics does not affect performance. We
# use bstats (https://bstats.org/) to gather all this data.
EnableMetrics: true

# This section allows to customize the behaviour of the checktool, which is an item that can be
# used to check the durability of blocks.
Checktool:
    # If set to true, the checktool will be always enabled (the player only needs the permission to use it).
    # If set to false, then the checktool can be toggled on and off by the player, given the player
    # has the permission to do so.
    # [Default] is false.
    AlwaysEnabled: false
    # In case the checktool is not always enabled, this property allows to set the default state of the checktool
    # when the player logs in. If set to true, the checktool will be enabled by default. If set to false, the
    # checktool will be disabled by default.
    # [Default] is false.
    EnabledByDefault: false
    # Prevents the default vanilla behaviour of the item to be used when the checktool is in the player's hand
    # when the player right-clicks a block that is handled by the plugin. If set to true, the plugin will
    # prevent the item from being used. If set to false, the item will be used as if the plugin wasn't there.
    # [Default] is true.
    PreventActionWhenCheckingHandledBlocks: true
    # Prevents the default vanilla behaviour of the item to be used when the checktool is in the player's hand
    # when the player right-clicks a block that is not handled by the plugin. If set to true, the plugin will
    # prevent the item from being used. If set to false, the item will be used as if the plugin wasn't there.
    # [Default] is true.
    PreventActionWhenCheckingNonHandledBlocks: true
    # If set to true, using the checktool in a world where ExplodeAny is disabled will not send any message to the player.
    # If set to false, the plugin will send a message to the player informing that the functionality is disabled in that world.
    # [Default] is false.
    SilentWhenCheckingOnDisabledWorlds: false
    # If set to true, using the checktool without the permission to do so will not send any message to the player.
    # If set to false, the plugin will send a message to the player informing that he/she doesn't have the permission.
    # [Default] is false.
    SilentWhenCheckingWithoutPermissions: false
    # If set to true, the plugin will not send any message when the player checks a block that is not handled
    # by the plugin. If set to false, the plugin will send a message to the player informing that the block is
    # not handled.
    # [Default] is false.
    SilentWhenCheckingNonHandledBlocks: false

# Named groups of materials and/or entitys. You can create groups with a mix of materials
# and entities. When you use the group in a certain section, the plugin will choose only
# the values that make sense for that section. If no value in the group makes sense for the
# section, then it will be considered an invalid group. You can use the name you like for the
# groups, but if group's name coincides with a valid material or entity's name, then the valid
# material or entity will be selected as the target, and not the group.
#
# When a single entity/material appears more than once in the same section, the following rules
# will be used to merge them, depending on the section:
#
# EXPLODING ENTITIES:
# 1. If an entity appears in two or more groups, then the material configurations
#    will try to merge without overwriting each other. If a material configuration
#    for an entity appears in both groups, then the material configuration of the
#    group that appears first in the configuration is applied.
# 2. If an entity appears in two or more groups but also as an individual item,
#    then rule 1 applies, and after that, the individual configuration will be merged,
#    overwriting the previous rules if necessary (has greater priority than groups).
#
# MATERIAL CONFIGURATIONS:
# 1. If a material configuration appears in two or more groups, then only the material
#    configuration of the group that appears first in the configuration will be applied.
# 2. If a material configuration appears in two or more groups but also as an individual
#    item, then the individual configuration will be applied.
Groups:
    unbreakableBlocks:
        - OBSIDIAN
        - CRYING_OBSIDIAN
        - BEDROCK
    dangerousEntity:
        - PRIMED_TNT

# This sections allows to customize the behaviour of Vanilla entities explosions
# Allowed entity values are:
# WITHER, ENDER_CRYSTAL (or END_CRYSTAL), PRIMED_TNT (or TNT), MINECART_TNT (or TNT_MINECART),
# CREEPER, CHARGED_CREEPER, FIREBALL, DRAGON_FIREBALL, SMALL_FIREBALL, WITHER_SKULL,
# CHARGED_WITHER_SKULL, BED, RESPAWN_ANCHOR
# Note that every property that appears here can be used in any other entity section, like
# CannonProjectile, MagicEntity or CustomEntity.
VanillaEntity:
    # Groups can also be used here (like this one).
    dangerousEntity:
        # This section allows to configure some properties of the exploding entity itself.
        # It is not mandatory.
        Properties:
            # Setting this to anything different than 0.0 will override the original explosion radius.
            # [Minimum] [default] is 0.0, which means keeping the original explosion radius.
            ExplosionRadius: 0.0
            # Multiplicative factor applied to the explosion radius.
            # [Minimum] is 0.0, which means nullifying the explosion.
            # [Default] is 1.0, which means keeping the original explosion radius.
            # A value greater than 1.0 means magnifying the explosion radius.
            ExplosionFactor: 1.0
            # If the original explosion is not replaced, the above properties (ExplosionRadius, ExplosionFactor)
            # will only affect the radius that ExplodeAny will use to calculate the damage to blocks. The original
            # explosion will keep its original radius.
            #
            # If replaced, the new explosion will have the specified explosion radius, but some properties
            # of the original explosion might get lost. For example, if the original explosion was to set
            # blocks on fire, the replacement will not keep this behaviour. Cannons projectiles will also
            # lose their special properties, such as clustering, etc.
            #
            # [Default] is false.
            ReplaceOriginalExplosion: false
            # Multiplicative factor applied to the explosion radius when it takes place underwater.
            # [Minimum] is 0.0, which means it will disabled
            # [Default] is 0.5, which reduces the explosion radius to half its original value.
            # A value of 1.0 means that water doesn't affect explosion radius
            # A value greater than 1.0 means underwater explosion radius is magnified.
            UnderwaterExplosionFactor: 0.5
            # If the explosion takes place underwater, set this true to create a custom explosion that can
            # break unmanaged Vanilla blocks underwater (like sand, stone or dirt). Blocks managed by ExplodeAny
            # will keep their behaviour!
            # [Default] is false.
            ExplosionDamageBlocksUnderwater: false
            # If ExplosionDamageBlocksUnderwater is set true, then this property determines whether
            # the original explosion is replaced with the one that ExplodeAny will spawn to break blocks
            # underwater.
            #
            # If replaced, some properties of the original explosion might get lost. For example, if the
            # original explosion was to set blocks on fire, the replacement will not keep this behaviour.
            # Cannons projectiles will also lose their special properties, such as clustering, etc.
            #
            # Not replacing it means that the ExplodeAny explosion will spawn together with the original one,
            # which is not bad at all but might be undesired for some people (double entity damage? laggier?).
            # I suggest to play with this parameter and decide!
            #
            # [Default] is true.
            ReplaceOriginalExplosionWhenUnderwater: true
            # The explosion will remove the waterlogged state from nearby blocks before the explosion,
            # thus causing damage to blocks that would normally not break, like waterlogged stairs, etc.
            # [Default] is false.
            ExplosionRemoveWaterloggedStateFromNearbyBlocks: false
            # Specifies when ExplosionRemoveWaterloggedStateFromNearbyBlocks is applied. Surface and
            # underwater refer to the explosion's location.
            ExplosionRemoveWaterloggedStateFromNearbyBlocksOnSurface: true
            ExplosionRemoveWaterloggedStateFromNearbyBlocksUnderwater: true
            # The explosion will remove nearby waterlogged blocks before the explosion. If this and
            # ExplosionRemoveWaterloggedStateFromNearbyBlocks are both set to true, then this takes
            # precedence.
            ExplosionRemoveNearbyWaterloggedBlocks: false
            # Specifies when ExplosionRemoveNearbyWaterloggedBlocks is applied. Surface and underwater
            # refer to the explosion's location.
            ExplosionRemoveNearbyWaterloggedBlocksOnSurface: true
            ExplosionRemoveNearbyWaterloggedBlocksUnderwater: true
            # The explosion will remove nearby liquids before the explosion, thus allowing to break
            # through liquids.
            # [Default] is false.
            ExplosionRemoveNearbyLiquids: false
            # Specifies when ExplosionRemoveNearbyLiquids is applied. Surface and underwater refer to
            # the explosion's location.
            ExplosionRemoveNearbyLiquidsOnSurface: true
            ExplosionRemoveNearbyLiquidsUnderwater: true
            # The explosion will pack the dropped items into a single entity, which will be spawned
            # at the explosion's location. This can help reducing lag on client side when the explosion
            # causes a lot of items to be spawned (in general, when explosion radius > 10 and many items
            # are dropped). If set to false, then items will drop naturally (like in Vanilla).
            # [Default] is false.
            PackDroppedItems: false
            # This section allows to specify the particles that will spawn when the entity explodes.
            Particles:
                # Name of the particles to be spawned. Valid values are listed in
                # https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Particle.html
                Name: REDSTONE
                # Size of the cube that will contain the particles
                DeltaX: 2.0
                DeltaY: 2.0
                DeltaZ: 2.0
                # Amount of particles to be spawned. Be careful, larger values could cause FPS drops.
                Amount: 2000
                # Speed of the particles to be spawned. Must be a positive value or zero.
                Speed: 1.0
                # Allows the particles to be seen up to 256 blocks away.
                Force: true
                # Color of the particles. Only applicable when particle's name is REDSTONE
                Red: 255
                Blue: 0
                Green: 255
                # Size of the particles. Must be a positive value. Only applicable when particle's name is REDSTONE
                Size: 2.0
            # This section allows to specify the sound to be played when the entity explodes.
            Sound:
                # Name of the sound to be played. Valid values are listed in
                # https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
                Name: ENTITY_OCELOT_HURT
                # Volume of the sound to be played. Must be a positive value. Values greater than
                # 1.0 will not increase the loudness of the sound, but will allow the sound to be heared
                # in a greater radius.
                Volume: 1.0
                # Pitch of the sound. Must be between 0.5 and 2.0, and allows to specify the speed
                # the sound is played at.
                Pitch: 1.0
        # This section contains the materials that will be managed by the plugin.
        # It is not mandatory: if this section doesn't exist, the plugin will understand that
        # every section in the entity is a material. That can be used as a shortcut when
        # you don't want to add entity properties, but only to list the affected materials.
        # The damage to all those materials is "simulated" by the plugin and managed
        # by these settings.
        Materials:
            # Valid values are all materials listed in
            # https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html.
            # WATER and LAVA are not allowed.
            # Groups can also be used here.
            unbreakableBlocks:
                # Base damage used to compute the effective damage taken by a block.
                # [Minimum] is 0.0, which means the block isn't affected by the explosion.
                # [Default] is the same value as BlockDurability.
                # Values greater than BlockDurability are allowed.
                #
                # NOTE: Effective damage is calculated according to the following formula:
                # effectiveDamage = baseDamage * underwaterDamageFactor * (1 - distanceFactor * distanceAttenuationFactor)
                # where distanceFactor = distance / explosionRadius
                Damage: 50.0
                # Indicates the chance of naturally breaking the block (and thus having drops).
                # [Minimum] [default] is 0.0, which means blocks will never break naturally.
                # [Maximum] is 100.0, which means blocks will always break naturally.
                DropChance: 0.0
                # Indicates how effective damage decreases with distance.
                # [Minimum] [default] is 0.0, which means that all blocks in range will
                # take the same amount of damage.
                # [Maximum] is 1.0, which means that effective damage decreases linearly as
                # distance increases.
                DistanceAttenuationFactor: 0.0
                # Damage multiplicative factor applied when explosion takes place underwater.
                # [Minimum] is 0.0, which means no damage will be taken underwater.
                # [Default] is 0.5, which halves the damage taken in underwater explosions.
                # A value of 1.0 means that water doesn't affect damage.
                # A value greater than 1.0 means damage underwater is magnified.
                UnderwaterDamageFactor: 0.5
                # Specifies when UnderwaterDamageFactor is applied.
                # False [default]: Look for water in the explosion center. (faster)
                # True: Trace a ray from the explosion center to each block and look for water. (fast)
                FancyUnderwaterDetection: false
                # Note how Particles and Sound sections can also be placed here, in the material section.
                Particles:
                    Name: BLOCK_CRACK
                    DeltaX: 5.0
                    DeltaY: 5.0
                    DeltaZ: 5.0
                    Amount: 2000
                    Speed: 1.0
                    Force: true
                    # Some particles require a Material to be specified.
                    Material: OBSIDIAN
                Sound:
                    Name: BLOCK_SAND_BREAK
                    Volume: 1.0
                    Pitch: 1.0
            # Not affected by the explosion of any "dangerousEntity"! Will never break...
            DIRT:
                Damage: 0.0

# This section allows to customize the behaviour of Cannons explosions.
# The support for Cannons will be enabled automatically when it is detected.
CannonProjectile:
    # Cannon projectile IDs
    diamond:
        Properties:
            ExplosionDamageBlocksUnderwater: true
            # Overriding the original projectile explosion also means that all side effects
            # managed by Cannons (like spawning fireworks, cluster bombs, etc.) will be disabled.
            # This is a limitation of the Cannons API, and can't be fixed by ExplodeAny.
            ReplaceOriginalExplosionWhenUnderwater: true
            UnderwaterExplosionFactor: 0.5
        Materials:
            # Contrary to what happens in the VanillaEntity section, it's not possible to override
            # the behaviour of blocks that would break in regular conditions when a Cannon projectile
            # explodes. That means that putting breakable materials here (like DIRT) won't have the desired
            # effect.
            OBSIDIAN:
                Damage: 50.0
                DropChance: 0.0
                DistanceAttenuationFactor: 0.0
                UnderwaterDamageFactor: 1.0
                FancyUnderwaterDetection: false

# This section allows to customize the behaviour Magic entities explosions.
# The support for Magic will be enabled automatically when it is detected.
# This section behaves exactly as the VanillaEntity section, but will affect only
# to entities spawned by Magic and not to vanilla entities. Allowed entity values are:
# WITHER, ENDER_CRYSTAL, PRIMED_TNT, MINECART_TNT, CREEPER, CHARGED_CREEPER,
# FIREBALL, DRAGON_FIREBALL, SMALL_FIREBALL, WITHER_SKULL, CHARGED_WITHER_SKULL,
# BED, RESPAWN_ANCHOR
MagicEntity:
    PRIMED_TNT:
        unbreakableBlocks:
            Damage: 25.0

# This section allows to customize the behaviour of QualityArmory explosions.
# The support for QualityArmory will be enabled automatically when it is detected.
# Allowed entity values are:
# RPG, HomingRPG, MiniNuke, Grenade, StickyGrenade, ProxyMine
QualityArmory:
    RPG:
        OBSIDIAN:
            Damage: 50.0

# This section allows to customize the behaviour of custom Vanilla entities explosions, which
# are entities introduced by mods in Forge servers.
# Any entity name can be used here, since there's no way to check if the entity exists.
CustomEntity:
    # From https://www.curseforge.com/minecraft/mc-mods/mrcrayfishs-gun-mod, for example.
    CGM_MISSILE:
        Properties:
            # We need to specify the ExplosionRadius manually, otherwise a warning will be thrown and
            # the entity won't be taken into account, since there's no way for ExplodeAny to know it.
            ExplosionRadius: 4.0
        Materials:
            Obsidian:
                Damage: 50.0

# All colors and modifiers are available for locale messages.
# Some messages allow to use placeholders, which are replaced by the plugin with the corresponding
# value. Placeholders are represented by %PLACEHOLDER_NAME%.
# The following placeholders are available:
Locale:
    # - NotAllowed:
    #   (None)
    NotAllowed: "You are not allowed to perform this action!"
    # - Usage:
    #   %DESCRIPTION% represents the command's description
    Usage: "Usage: %DESCRIPTION%"
    # - OnlyPlayerAllowed:
    #   (None)
    OnlyPlayerAllowed: "Only players can perform this action!"
    # - PlayerDoesntExist:
    #   %NAME% represents the player's name
    PlayerDoesntExist: "Player %NAME% doesn't exist in the server!"
    # - PlayerIsOffline:
    #   %NAME% represents the player's name
    PlayerIsOffline: "Player %NAME% must be online to perform that"
    # - EnterChecktoolMode:
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    EnterChecktoolMode: "You can now right-click a block with %PRETTY_ITEM% to display block durability"
    # - LeaveChecktoolMode:
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    LeaveChecktoolMode: "You can no longer check for a block durability"
    # - ChecktoolToggledOn:
    #   %NAME% represents the player's name
    ChecktoolToggledOn: Checktool mode toggled on for player %NAME%
    # - ChecktoolToggledOff:
    #   %NAME% represents the player's name
    ChecktoolToggledOff: Checktool mode toggled off for player %NAME%
    # - ChecktoolUse:
    #   %MATERIAL% represents the clicked block's type,
    #   %PRETTY_MATERIAL% represents the clicked block's type in a more readable way,
    #   %B_X% the X coordinate of the targeted block
    #   %B_Y% the Y coordinate of the targeted block
    #   %B_Z% the Z coordinate of the targeted block
    #   %DURABILITY% the clicked block's durability and
    #   %MAX_DURABILITY% the maximum durability a block can have (same as BlockDurability),
    #   %DURABILITY_PERCENTAGE% the clicked block's durability as a percentage (excluding the % symbol)
    ChecktoolUse: "Block health: %DURABILITY_PERCENTAGE%% (%PRETTY_MATERIAL%)"
    # - ChecktoolSet:
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    ChecktoolSet: "Checktool successfully set to %PRETTY_ITEM%!"
    # - ChecktoolNotPersisted:
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    ChecktoolNotPersisted: "Checktool item was set to %PRETTY_ITEM%, but it couldn't be persisted"
    # - ChecktoolGiven:
    #   %NAME% represents the player's name
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    ChecktoolGiven: "A checktool (%PRETTY_ITEM%) was given to player %NAME%"
    # - ChecktoolReset:
    #   (None)
    ChecktoolReset: "Checktool successfully reset to bare hand (Air)"
    # - ChecktoolNotHandled:
    #   %MATERIAL% represents the clicked block's type,
    #   %PRETTY_MATERIAL% represents the clicked block's type in a more readable way
    ChecktoolNotHandled: "%PRETTY_MATERIAL% is not handled by the current configuration"
    # - ChecktoolInfo:
    #   %ITEM% represents the checktool item's name
    #   %PRETTY_ITEM% represents the checktool item's name in a more readable way
    ChecktoolInfo: "Current checktool item: %PRETTY_ITEM%"
    # - ChecktoolAlwaysEnabled:
    #   (None)
    ChecktoolAlwaysEnabled: "Checktool can't be toggled off"
    # - DisabledInThisWorld:
    #   (None)
    DisabledInThisWorld: "This functionality is disabled in this world"
    # - Reloaded:
    #   (None)
    Reloaded: "Reloaded successfully!"
    # - DebugEnabled:
    #   (None)
    DebugEnabled: "Debug mode has been enabled"
    # - DebugDisabled:
    #   (None)
    DebugDisabled: "Debug mode has been disabled"

# Prefix for all locale messages
LocalePrefix: "[ExplodeAny] "

# Use this section to disable the plugin in certain worlds
# Notice that world names are case sensitive
DisabledWorlds:
# - My_example_world_with_no_ExplodeAny
